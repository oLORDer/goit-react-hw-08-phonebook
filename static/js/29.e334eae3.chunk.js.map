{"version":3,"file":"static/js/29.e334eae3.chunk.js","mappings":"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","sources":["webpack://goit-react-hw-06-phonebook/./src/components/Form/form.module.scss?1ee0","components/Form/Form.jsx","components/Form/formComponents/Filter.jsx","../node_modules/nanoid/index.browser.js","redux/selectors.js","components/Form/formComponents/ContactList.jsx","pages/MyContactsPage/MyContactsPage.jsx","webpack://goit-react-hw-06-phonebook/./src/pages/RegisterPage/RegisterPage.module.scss?c188"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"form\":\"form_form__sP2jI\",\"find\":\"form_find__nFxSw\",\"item\":\"form_item__uigkJ\",\"deleteBtn\":\"form_deleteBtn__e7L2o\"};","import { useState } from 'react';\nimport { useDispatch } from 'react-redux';\n\nimport { addContacts } from 'redux/contacts-operations';\n\nimport s from './form.module.scss';\nimport st from 'pages/RegisterPage/RegisterPage.module.scss';\n\nexport default function Form() {\n  const dispatch = useDispatch();\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    dispatch(addContacts({ name, number }));\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  const handleChange = e => {\n    const { name, value } = e.target;\n    if (name === 'name') {\n      setName(value);\n      return;\n    }\n\n    if (name === 'number') {\n      setNumber(value);\n    }\n  };\n\n  return (\n    <form className={s.form} onSubmit={handleSubmit}>\n      <label>\n        Name\n        <input\n          type=\"text\"\n          name=\"name\"\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          value={name}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        <input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          onChange={handleChange}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n        ></input>\n      </label>\n      <button type=\"submit\" className={st.btnGlow}>Add contact</button>\n    </form>\n  );\n}\n","import { useDispatch } from 'react-redux';\n\nimport { setFilter } from 'redux/filter';\n\nimport s from '../../Form/form.module.scss';\n\nexport default function Filter() {\n  const dispatch = useDispatch();\n  const contactsFilter = ({ target }) => {\n    dispatch(setFilter(target.value));\n  };\n\n  return (\n    <label className={s.find}>\n      Find contacts by name\n      <br />\n      <input type=\"text\" name=\"filter\" onChange={contactsFilter} />\n    </label>\n  );\n}\n","export { urlAlphabet } from './url-alphabet/index.js'\nexport let random = bytes => crypto.getRandomValues(new Uint8Array(bytes))\nexport let customRandom = (alphabet, defaultSize, getRandom) => {\n  let mask = (2 << (Math.log(alphabet.length - 1) / Math.LN2)) - 1\n  let step = -~((1.6 * mask * defaultSize) / alphabet.length)\n  return (size = defaultSize) => {\n    let id = ''\n    while (true) {\n      let bytes = getRandom(step)\n      let j = step\n      while (j--) {\n        id += alphabet[bytes[j] & mask] || ''\n        if (id.length === size) return id\n      }\n    }\n  }\n}\nexport let customAlphabet = (alphabet, size = 21) =>\n  customRandom(alphabet, size, random)\nexport let nanoid = (size = 21) =>\n  crypto.getRandomValues(new Uint8Array(size)).reduce((id, byte) => {\n    byte &= 63\n    if (byte < 36) {\n      id += byte.toString(36)\n    } else if (byte < 62) {\n      id += (byte - 26).toString(36).toUpperCase()\n    } else if (byte > 62) {\n      id += '-'\n    } else {\n      id += '_'\n    }\n    return id\n  }, '')\n","export const getContactsApi = ({contacts}) => contacts.items;\nexport const getFilteredContacts = ({contacts}) => contacts.filter;\nexport const getStateContacts = ({contacts}) => ({loading: contacts.loading, error: contacts.error})","import { nanoid } from 'nanoid';\nimport { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\n\nimport { getContactsApi, getStateContacts } from 'redux/selectors';\nimport { fetchContacts, removeContact } from 'redux/contacts-operations';\n\nimport s from 'components/Form/form.module.scss';\n\nexport default function ContactList() {\n  const dispatch = useDispatch();\n  const currentContacts = useSelector(getContactsApi);\n  const { loading } = useSelector(getStateContacts);\n  const filterWord = useSelector(state => state.filter);\n  const filteredContacts = currentContacts?.filter(\n    el =>\n      el.name.toLowerCase().includes(filterWord.toLowerCase()) ||\n      el.number.includes(filterWord.toLowerCase())\n  );\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n\n  const deleteContact = id => {\n    dispatch(removeContact(id));\n  };\n\n  return (\n    <div>\n      <h2>Contacts</h2>\n      <ul>\n        {!loading &&\n          filteredContacts?.map(({ id, name, number }) => {\n            return (\n              <li key={nanoid()} id={id} className={s.item}>\n                <div>{`${name}: ${number}`}</div>\n                <button\n                  className={s.deleteBtn}\n                  type=\"button\"\n                  onClick={() => deleteContact(id)}\n                >\n                  delete\n                </button>\n              </li>\n            );\n          })}\n      </ul>\n      {loading && <p>Loading contacts...</p>}\n    </div>\n  );\n}\n","import Form from 'components/Form/Form';\nimport Filter from 'components/Form/formComponents/Filter';\nimport ContactList from 'components/Form/formComponents/ContactList';\n\nconst MyContactsPage = () => {\n  return (\n    <div style={{display: 'flex', alignItems: 'center', flexDirection: 'column'}}>\n      <h1>Phonebook</h1>\n      <Form />\n      <Filter />\n      <ContactList />\n    </div>\n  );\n};\n\nexport default MyContactsPage;\n","// extracted by mini-css-extract-plugin\nexport default {\"form\":\"RegisterPage_form__2uFZs\",\"btnGlow\":\"RegisterPage_btnGlow__BROYp\",\"glowing\":\"RegisterPage_glowing__fI6Z2\"};"],"names":["Form","dispatch","useDispatch","useState","name","setName","number","setNumber","reset","handleChange","e","target","value","className","s","onSubmit","preventDefault","addContacts","type","pattern","title","required","onChange","st","Filter","setFilter","getContactsApi","contacts","items","getStateContacts","loading","error","ContactList","currentContacts","useSelector","filterWord","state","filter","filteredContacts","el","toLowerCase","includes","useEffect","fetchContacts","map","id","onClick","removeContact","deleteContact","size","crypto","getRandomValues","Uint8Array","reduce","byte","toString","toUpperCase","nanoid","style","display","alignItems","flexDirection"],"sourceRoot":""}